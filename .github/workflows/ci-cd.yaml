name: CI/CD Pipeline for ML Model

on:
  push:
    branches:
      - main  # Trigger on changes to the main branch
    paths:
      - '**/*.py'       # Detect changes to Python files
      - '**/*.dvc'      # Detect changes to DVC files
      - 'data/**'       # Detect changes to data files
  pull_request:         # Trigger on pull requests
    branches:
      - main

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 4: Pull data from DVC
    - name: Pull data using DVC
      run: |
        python -m pip install dvc[all]
        dvc pull
      env:
        DVC_REMOTE: ${{ secrets.DVC_REMOTE_URL }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Step 5: Run the ML pipeline
    - name: Run ML pipeline
      run: |
        if [ -f pipeline.py ]; then python pipeline.py; else echo "pipeline.py not found"; fi

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build Docker image
    - name: Build Docker image
      run: docker build -t rbenfraj46/insurance_model:latest .

    # Step 8: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push rbenfraj46/insurance_model:latest
